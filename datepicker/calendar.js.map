{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../src/lib/datepicker/calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateLocale } from './date-locale';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md2-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'role': 'calendar'\n  },\n  //encapsulation: ViewEncapsulation.None\n})\nexport class Md2Calendar {\n\n  private _selected: Date;\n  private _date: Date;\n\n  _days: Array<any> = this._locale.days;\n\n  dates: Array<any> = [];\n\n  _view: boolean = true;\n\n  constructor(private _element: ElementRef, private _locale: DateLocale) {\n    this.renderCalendar();\n  }\n\n  @Output() selectedChange: EventEmitter<Date> = new EventEmitter<Date>();\n\n  @Input()\n  get selected() { return this._selected; }\n  set selected(value: Date) {\n    if (this._selected !== value) {\n      this._selected = value || new Date();\n    }\n  }\n\n  get date() { return this._date; }\n  set date(value: Date) {\n    if (this._date !== value) {\n      this._date = value || new Date();\n    }\n  }\n\n  @Input()\n  set view(value: string) {\n    if (value === 'years') {\n      this._view = false;\n    } else { this._view = true; }\n  }\n\n  /** Emits an event when the user selects a time. */\n  _emitChangeEvent(): void {\n    this.selectedChange.emit(this.selected);\n  }\n\n  /**\n   * render Calendar\n   */\n  private renderCalendar() {\n    //let year = this.date.getFullYear();\n    //let month = this.date.getMonth();\n\n    //this.dates.length = 0;\n\n    //let firstDayOfMonth = this._locale.getFirstDateOfMonth(this.date);\n    //let numberOfDaysInMonth = this._locale.getNumberOfDaysInMonth(this.date);\n    //let numberOfDaysInPrevMonth = this._locale.getNumberOfDaysInMonth(\n    //  this._locale.incrementMonths(this.date, -1));\n\n    //let dayNbr = 1;\n    ////let calMonth = this._prevMonth;\n    //if (i === 1) {\n    //  let prevMonth = numberOfDaysInPrevMonth - firstDayOfMonth.getDay() + 1;\n    //  for (let j = prevMonth; j <= numberOfDaysInPrevMonth; j++) {\n    //    let iDate: IDate = { year: year, month: month - 1, day: j, hour: 0, minute: 0 };\n    //    let date: Date = new Date(year, month - 1, j);\n    //    week.push({\n    //      date: date,\n    //      dateObj: iDate,\n    //      calMonth: calMonth,\n    //      today: this._locale.isSameDay(this.today, date),\n    //      disabled: this._isDisabledDate(date)\n    //    });\n    //  }\n\n    //  calMonth = this._currMonth;\n    //  let daysLeft = 7 - week.length;\n    //  for (let j = 0; j < daysLeft; j++) {\n    //    let iDate: IDate = { year: year, month: month, day: dayNbr, hour: 0, minute: 0 };\n    //    let date: Date = new Date(year, month, dayNbr);\n    //    week.push({\n    //      date: date,\n    //      dateObj: iDate,\n    //      calMonth: calMonth,\n    //      today: this._locale.isSameDay(this.today, date),\n    //      disabled: this._isDisabledDate(date)\n    //    });\n    //    dayNbr++;\n    //  }\n    //} else {\n    //  for (let j = 1; j < 8; j++) {\n    //    if (dayNbr > numberOfDaysInMonth) {\n    //      dayNbr = 1;\n    //      calMonth = this._nextMonth;\n    //    }\n    //    let iDate: IDate = {\n    //      year: year,\n    //      month: calMonth === this._currMonth ? month : month + 1,\n    //      day: dayNbr, hour: 0, minute: 0\n    //    };\n    //    let date: Date = new Date(year, iDate.month, dayNbr);\n    //    week.push({\n    //      date: date,\n    //      dateObj: iDate,\n    //      calMonth: calMonth,\n    //      today: this._locale.isSameDay(this.today, date),\n    //      disabled: this._isDisabledDate(date)\n    //    });\n    //    dayNbr++;\n    //  }\n    //  this.dates.push(week);\n    //}\n  }\n\n}\n"]}